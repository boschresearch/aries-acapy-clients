{"paths": {"/action-menu/{conn_id}/close": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ActionMenuModulesResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["action-menu"], "summary": "Close the active menu associated with a connection", "produces": ["application/json"]}}, "/action-menu/{conn_id}/fetch": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ActionMenuModulesResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["action-menu"], "summary": "Fetch the active menu", "produces": ["application/json"]}}, "/action-menu/{conn_id}/perform": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ActionMenuModulesResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/PerformRequest"}}, {"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["action-menu"], "summary": "Perform an action associated with the active menu", "produces": ["application/json"]}}, "/action-menu/{conn_id}/request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ActionMenuModulesResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["action-menu"], "summary": "Request the active menu", "produces": ["application/json"]}}, "/action-menu/{conn_id}/send-menu": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ActionMenuModulesResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/SendMenu"}}, {"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["action-menu"], "summary": "Send an action menu to a connection", "produces": ["application/json"]}}, "/connections": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnectionList"}, "description": ""}}, "parameters": [{"in": "query", "name": "alias", "required": false, "type": "string", "description": "Alias", "example": "Barry"}, {"in": "query", "name": "invitation_key", "required": false, "type": "string", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "description": "invitation key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"}, {"in": "query", "name": "my_did", "required": false, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "My DID", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "state", "required": false, "type": "string", "enum": ["response", "abandoned", "error", "completed", "init", "start", "invitation", "active", "request"], "description": "Connection state"}, {"in": "query", "name": "their_did", "required": false, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "Their DID", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "their_role", "required": false, "type": "string", "enum": ["invitee", "requester", "inviter", "responder"], "description": "Their role in the connection protocol", "example": "invitee"}], "tags": ["connection"], "summary": "Query agent-to-agent connections", "produces": ["application/json"]}}, "/connections/create-invitation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/InvitationResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/CreateInvitationRequest"}}, {"in": "query", "name": "alias", "required": false, "type": "string", "description": "Alias", "example": "Barry"}, {"in": "query", "name": "auto_accept", "required": false, "type": "boolean", "description": "Auto-accept connection (defaults to configuration)"}, {"in": "query", "name": "multi_use", "required": false, "type": "boolean", "description": "Create invitation for multiple use (default false)"}, {"in": "query", "name": "public", "required": false, "type": "boolean", "description": "Create invitation from public DID (default false)"}], "tags": ["connection"], "summary": "Create a new connection invitation", "produces": ["application/json"]}}, "/connections/create-static": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnectionStaticResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/ConnectionStaticRequest"}}], "tags": ["connection"], "summary": "Create a new static connection", "produces": ["application/json"]}}, "/connections/receive-invitation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/ReceiveInvitationRequest"}}, {"in": "query", "name": "alias", "required": false, "type": "string", "description": "Alias", "example": "Barry"}, {"in": "query", "name": "auto_accept", "required": false, "type": "boolean", "description": "Auto-accept connection (defaults to configuration)"}, {"in": "query", "name": "mediation_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["connection"], "summary": "Receive a new connection invitation", "produces": ["application/json"]}}, "/connections/{conn_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["connection"], "summary": "Fetch a single connection record", "produces": ["application/json"]}, "delete": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnectionModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["connection"], "summary": "Remove an existing connection record", "produces": ["application/json"]}}, "/connections/{conn_id}/accept-invitation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "mediation_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "my_endpoint", "required": false, "type": "string", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "description": "My URL endpoint", "example": "https://myhost:8021"}, {"in": "query", "name": "my_label", "required": false, "type": "string", "description": "Label for connection", "example": "Broker"}], "tags": ["connection"], "summary": "Accept a stored connection invitation", "produces": ["application/json"]}}, "/connections/{conn_id}/accept-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "my_endpoint", "required": false, "type": "string", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "description": "My URL endpoint", "example": "https://myhost:8021"}], "tags": ["connection"], "summary": "Accept a stored connection request", "produces": ["application/json"]}}, "/connections/{conn_id}/endpoints": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/EndpointsResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["connection"], "summary": "Fetch connection remote endpoint", "produces": ["application/json"]}}, "/connections/{conn_id}/establish-inbound/{ref_id}": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnectionModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "path", "name": "ref_id", "required": true, "type": "string", "description": "Inbound connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["connection"], "summary": "Assign another connection as the inbound connection", "produces": ["application/json"]}}, "/connections/{conn_id}/metadata": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnectionMetadata"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "key", "required": false, "type": "string", "description": "Key to retrieve."}], "tags": ["connection"], "summary": "Fetch connection metadata", "produces": ["application/json"]}, "post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnectionMetadata"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/ConnectionMetadataSetRequest"}}, {"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["connection"], "summary": "Set connection metadata", "produces": ["application/json"]}}, "/connections/{conn_id}/send-message": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/BasicMessageModuleResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/SendMessage"}}, {"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["basicmessage"], "summary": "Send a basic message to a connection", "produces": ["application/json"]}}, "/connections/{conn_id}/send-ping": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/PingRequestResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/PingRequest"}}, {"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["trustping"], "summary": "Send a trust ping to a connection", "produces": ["application/json"]}}, "/connections/{conn_id}/start-introduction": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/IntroModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "target_connection_id", "required": true, "type": "string", "description": "Target connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "message", "required": false, "type": "string", "description": "Message", "example": "Allow me to introduce ..."}], "tags": ["introduction"], "summary": "Start an introduction between two connections", "produces": ["application/json"]}}, "/credential-definitions": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredentialDefinitionSendResults"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/CredentialDefinitionSendRequest"}}], "tags": ["credential-definition"], "summary": "Sends a credential definition to the ledger", "produces": ["application/json"]}}, "/credential-definitions/created": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredentialDefinitionsCreatedResults"}, "description": ""}}, "parameters": [{"in": "query", "name": "cred_def_id", "required": false, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "description": "Credential definition id", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"}, {"in": "query", "name": "issuer_did", "required": false, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "Issuer DID", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "schema_id", "required": false, "type": "string", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0"}, {"in": "query", "name": "schema_issuer_did", "required": false, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "Schema issuer DID", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "schema_name", "required": false, "type": "string", "description": "Schema name", "example": "membership"}, {"in": "query", "name": "schema_version", "required": false, "type": "string", "pattern": "^[0-9.]+$", "description": "Schema version", "example": "1.0"}], "tags": ["credential-definition"], "summary": "Search for matching credential definitions that agent originated", "produces": ["application/json"]}}, "/credential-definitions/{cred_def_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredentialDefinitionGetResults"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_def_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"}], "tags": ["credential-definition"], "summary": "Gets a credential definition from the ledger", "produces": ["application/json"]}}, "/credential/mime-types/{credential_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/AttributeMimeTypesResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "credential_id", "required": true, "type": "string", "description": "Credential identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["credentials"], "summary": "Get attribute MIME types from wallet", "produces": ["application/json"]}}, "/credential/revoked/{credential_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredRevokedResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "credential_id", "required": true, "type": "string", "description": "Credential identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "from", "required": false, "type": "string", "pattern": "^[0-9]*$", "description": "Earliest epoch of revocation status interval of interest", "example": "0"}, {"in": "query", "name": "to", "required": false, "type": "string", "pattern": "^[0-9]*$", "description": "Latest epoch of revocation status interval of interest", "example": "0"}], "tags": ["credentials"], "summary": "Query credential revocation status by id", "produces": ["application/json"]}}, "/credential/{credential_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredBrief"}, "description": ""}}, "parameters": [{"in": "path", "name": "credential_id", "required": true, "type": "string", "description": "Credential identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["credentials"], "summary": "Fetch a credential from wallet by id", "produces": ["application/json"]}, "delete": {"responses": {"200": {"schema": {"$ref": "#/definitions/HolderModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "credential_id", "required": true, "type": "string", "description": "Credential identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["credentials"], "summary": "Remove a credential from the wallet by id", "produces": ["application/json"]}}, "/credentials": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredBriefList"}, "description": ""}}, "parameters": [{"in": "query", "name": "count", "required": false, "type": "string", "pattern": "^[1-9][0-9]*$", "description": "Maximum number to retrieve", "example": "1"}, {"in": "query", "name": "start", "required": false, "type": "string", "pattern": "^[0-9]*$", "description": "Start index", "example": "0"}, {"in": "query", "name": "wql", "required": false, "type": "string", "pattern": "^{.*}$", "description": "(JSON) WQL query", "example": "{\"attr::name::value\": \"Alex\"}"}], "tags": ["credentials"], "summary": "Fetch credentials from wallet", "produces": ["application/json"]}}, "/didexchange/create-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/DIDXRequest"}, "description": ""}}, "parameters": [{"in": "query", "name": "their_public_did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "Public DID to which to request connection", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "mediation_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "my_endpoint", "required": false, "type": "string", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "description": "My URL endpoint", "example": "https://myhost:8021"}, {"in": "query", "name": "my_label", "required": false, "type": "string", "description": "Label for connection request", "example": "Broker"}], "tags": ["did-exchange"], "summary": "Create request against public DID's implicit invitation", "produces": ["application/json"]}}, "/didexchange/receive-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/DIDXRequest"}}, {"in": "query", "name": "alias", "required": false, "type": "string", "description": "Alias for connection", "example": "Barry"}, {"in": "query", "name": "auto_accept", "required": false, "type": "boolean", "description": "Auto-accept connection (defaults to configuration)"}, {"in": "query", "name": "mediation_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "my_endpoint", "required": false, "type": "string", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "description": "My URL endpoint", "example": "https://myhost:8021"}], "tags": ["did-exchange"], "summary": "Receive request against public DID's implicit invitation", "produces": ["application/json"]}}, "/didexchange/{conn_id}/accept-invitation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "my_endpoint", "required": false, "type": "string", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "description": "My URL endpoint", "example": "https://myhost:8021"}, {"in": "query", "name": "my_label", "required": false, "type": "string", "description": "Label for connection request", "example": "Broker"}], "tags": ["did-exchange"], "summary": "Accept a stored connection invitation", "produces": ["application/json"]}}, "/didexchange/{conn_id}/accept-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "mediation_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "my_endpoint", "required": false, "type": "string", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "description": "My URL endpoint", "example": "https://myhost:8021"}], "tags": ["did-exchange"], "summary": "Accept a stored connection request", "produces": ["application/json"]}}, "/features": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/QueryResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "query", "required": false, "type": "string", "description": "Query", "example": "did:sov:*"}], "tags": ["server"], "summary": "Query supported features", "produces": ["application/json"]}}, "/issue-credential-2.0/create": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredCreate"}}], "tags": ["issue-credential v2.0"], "summary": "Send holder a credential, automating entire flow", "produces": ["application/json"]}}, "/issue-credential-2.0/records": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecordListResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "connection_id", "required": false, "type": "string", "format": "uuid", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "role", "required": false, "type": "string", "enum": ["issuer", "holder"], "description": "Role assigned in credential exchange"}, {"in": "query", "name": "state", "required": false, "type": "string", "enum": ["proposal-sent", "proposal-received", "offer-sent", "offer-received", "request-sent", "request-received", "credential-issued", "credential-received", "done"], "description": "Credential exchange state"}, {"in": "query", "name": "thread_id", "required": false, "type": "string", "format": "uuid", "description": "Thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Fetch all credential exchange records", "produces": ["application/json"]}}, "/issue-credential-2.0/records/{cred_ex_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecordDetail"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Fetch a single credential exchange record", "produces": ["application/json"]}, "delete": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20IssueCredentialModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Remove an existing credential exchange record", "produces": ["application/json"]}}, "/issue-credential-2.0/records/{cred_ex_id}/issue": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecordDetail"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredIssueRequest"}}, {"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Send holder a credential", "produces": ["application/json"]}}, "/issue-credential-2.0/records/{cred_ex_id}/problem-report": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20IssueCredentialModuleResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredIssueProblemReportRequest"}}, {"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Send a problem report for credential exchange", "produces": ["application/json"]}}, "/issue-credential-2.0/records/{cred_ex_id}/send-offer": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Send holder a credential offer in reference to a proposal with preview", "produces": ["application/json"]}}, "/issue-credential-2.0/records/{cred_ex_id}/send-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecord"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Send issuer a credential request", "produces": ["application/json"]}}, "/issue-credential-2.0/records/{cred_ex_id}/store": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecordDetail"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredStoreRequest"}}, {"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v2.0"], "summary": "Store a received credential", "produces": ["application/json"]}}, "/issue-credential-2.0/send": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredProposalRequestPreviewMand"}}], "tags": ["issue-credential v2.0"], "summary": "Send holder a credential, automating entire flow", "produces": ["application/json"]}}, "/issue-credential-2.0/send-offer": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredOfferRequest"}}], "tags": ["issue-credential v2.0"], "summary": "Send holder a credential offer, independent of any proposal", "produces": ["application/json"]}}, "/issue-credential-2.0/send-proposal": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V20CredExRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V20CredProposalRequestPreviewOpt"}}], "tags": ["issue-credential v2.0"], "summary": "Send issuer a credential proposal", "produces": ["application/json"]}}, "/issue-credential/create": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialCreate"}}], "tags": ["issue-credential v1.0"], "summary": "Send holder a credential, automating entire flow", "produces": ["application/json"]}}, "/issue-credential/records": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchangeListResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "connection_id", "required": false, "type": "string", "format": "uuid", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "role", "required": false, "type": "string", "enum": ["issuer", "holder"], "description": "Role assigned in credential exchange"}, {"in": "query", "name": "state", "required": false, "type": "string", "enum": ["proposal_sent", "proposal_received", "offer_sent", "offer_received", "request_sent", "request_received", "credential_issued", "credential_received", "credential_acked"], "description": "Credential exchange state"}, {"in": "query", "name": "thread_id", "required": false, "type": "string", "format": "uuid", "description": "Thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Fetch all credential exchange records", "produces": ["application/json"]}}, "/issue-credential/records/{cred_ex_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Fetch a single credential exchange record", "produces": ["application/json"]}, "delete": {"responses": {"200": {"schema": {"$ref": "#/definitions/IssueCredentialModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Remove an existing credential exchange record", "produces": ["application/json"]}}, "/issue-credential/records/{cred_ex_id}/issue": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialIssueRequest"}}, {"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Send holder a credential", "produces": ["application/json"]}}, "/issue-credential/records/{cred_ex_id}/problem-report": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/IssueCredentialModuleResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialProblemReportRequest"}}, {"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Send a problem report for credential exchange", "produces": ["application/json"]}}, "/issue-credential/records/{cred_ex_id}/send-offer": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Send holder a credential offer in reference to a proposal with preview", "produces": ["application/json"]}}, "/issue-credential/records/{cred_ex_id}/send-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Send issuer a credential request", "produces": ["application/json"]}}, "/issue-credential/records/{cred_ex_id}/store": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialStoreRequest"}}, {"in": "path", "name": "cred_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["issue-credential v1.0"], "summary": "Store a received credential", "produces": ["application/json"]}}, "/issue-credential/send": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialProposalRequestMand"}}], "tags": ["issue-credential v1.0"], "summary": "Send holder a credential, automating entire flow", "produces": ["application/json"]}}, "/issue-credential/send-offer": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialOfferRequest"}}], "tags": ["issue-credential v1.0"], "summary": "Send holder a credential offer, independent of any proposal", "produces": ["application/json"]}}, "/issue-credential/send-proposal": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10CredentialExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10CredentialProposalRequestOpt"}}], "tags": ["issue-credential v1.0"], "summary": "Send issuer a credential proposal", "produces": ["application/json"]}}, "/jsonld/sign": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/SignResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/SignRequest"}}], "tags": ["jsonld"], "summary": "Sign a JSON-LD structure and return it", "produces": ["application/json"]}}, "/jsonld/verify": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/VerifyResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/VerifyRequest"}}], "tags": ["jsonld"], "summary": "Verify a JSON-LD structure.", "produces": ["application/json"]}}, "/ledger/did-endpoint": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/LedgerModulesResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "endpoint_type", "required": false, "type": "string", "enum": ["Endpoint", "Profile", "LinkedDomains"], "description": "Endpoint type of interest (default 'Endpoint')", "example": "Endpoint"}], "tags": ["ledger"], "summary": "Get the endpoint for a DID from the ledger.", "produces": ["application/json"]}}, "/ledger/did-verkey": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/LedgerModulesResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}], "tags": ["ledger"], "summary": "Get the verkey for a DID from the ledger.", "produces": ["application/json"]}}, "/ledger/get-nym-role": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/LedgerModulesResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}], "tags": ["ledger"], "summary": "Get the role from the NYM registration of a public DID.", "produces": ["application/json"]}}, "/ledger/register-nym": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/LedgerModulesResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID to register", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "verkey", "required": true, "type": "string", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "description": "Verification key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"}, {"in": "query", "name": "alias", "required": false, "type": "string", "description": "Alias", "example": "Barry"}, {"in": "query", "name": "role", "required": false, "type": "string", "enum": ["STEWARD", "TRUSTEE", "ENDORSER", "NETWORK_MONITOR", "reset"], "description": "Role"}], "tags": ["ledger"], "summary": "Send a NYM registration to the ledger.", "produces": ["application/json"]}}, "/ledger/rotate-public-did-keypair": {"patch": {"responses": {"200": {"schema": {"$ref": "#/definitions/LedgerModulesResult"}, "description": ""}}, "parameters": [], "tags": ["ledger"], "summary": "Rotate key pair for public DID.", "produces": ["application/json"]}}, "/ledger/taa": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/TAAResult"}, "description": ""}}, "parameters": [], "tags": ["ledger"], "summary": "Fetch the current transaction author agreement, if any", "produces": ["application/json"]}}, "/ledger/taa/accept": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/LedgerModulesResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/TAAAccept"}}], "tags": ["ledger"], "summary": "Accept the transaction author agreement", "produces": ["application/json"]}}, "/mediation/default-mediator": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/MediationRecord"}, "description": null}}, "parameters": [], "tags": ["mediation"], "summary": "Get default mediator", "produces": ["application/json"]}, "delete": {"responses": {"201": {"schema": {"$ref": "#/definitions/MediationRecord"}, "description": null}}, "parameters": [], "tags": ["mediation"], "summary": "Clear default mediator", "produces": ["application/json"]}}, "/mediation/keylists": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/Keylist"}, "description": null}}, "parameters": [{"in": "query", "name": "conn_id", "required": false, "type": "string", "format": "uuid", "description": "Connection identifier (optional)", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "role", "required": false, "type": "string", "default": "server", "enum": ["client", "server"], "description": "Filer on role, 'client' for keys         mediated by other agents, 'server' for keys         mediated by this agent"}], "tags": ["mediation"], "summary": "Retrieve keylists by connection or role", "produces": ["application/json"]}}, "/mediation/keylists/{mediation_id}/send-keylist-query": {"post": {"responses": {"201": {"schema": {"$ref": "#/definitions/KeylistQuery"}, "description": null}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/KeylistQueryFilterRequest"}}, {"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "paginate_limit", "required": false, "type": "integer", "format": "int32", "default": -1, "description": "limit number of results"}, {"in": "query", "name": "paginate_offset", "required": false, "type": "integer", "format": "int32", "default": 0, "description": "offset to use in pagination"}], "tags": ["mediation"], "summary": "Send keylist query to mediator", "produces": ["application/json"]}}, "/mediation/keylists/{mediation_id}/send-keylist-update": {"post": {"responses": {"201": {"schema": {"$ref": "#/definitions/KeylistUpdate"}, "description": null}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/KeylistUpdateRequest"}}, {"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Send keylist update to mediator", "produces": ["application/json"]}}, "/mediation/request/{conn_id}": {"post": {"responses": {"201": {"schema": {"$ref": "#/definitions/MediationRecord"}, "description": null}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/MediationCreateRequest"}}, {"in": "path", "name": "conn_id", "required": true, "type": "string", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Request mediation from connection", "produces": ["application/json"]}}, "/mediation/requests": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/MediationList"}, "description": null}}, "parameters": [{"in": "query", "name": "conn_id", "required": false, "type": "string", "format": "uuid", "description": "Connection identifier (optional)", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "mediator_terms", "required": false, "collectionFormat": "multi", "type": "array", "description": "List of mediator rules for recipient", "items": {"type": "string", "description": "Indicate terms that the mediator requires the recipient to agree to"}}, {"in": "query", "name": "recipient_terms", "required": false, "collectionFormat": "multi", "type": "array", "description": "List of recipient rules for mediation", "items": {"type": "string", "description": "Indicate terms that the recipient requires the mediator to agree to"}}, {"in": "query", "name": "state", "required": false, "type": "string", "enum": ["request", "granted", "denied"], "description": "Mediation state (optional)", "example": "request, granted, or denied"}], "tags": ["mediation"], "summary": "Query mediation requests, returns list of all mediation records", "produces": ["application/json"]}}, "/mediation/requests/{mediation_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/MediationRecord"}, "description": null}}, "parameters": [{"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Retrieve mediation request record", "produces": ["application/json"]}, "delete": {"responses": {"200": {"schema": {"$ref": "#/definitions/MediationRecord"}, "description": null}}, "parameters": [{"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Delete mediation request by ID", "produces": ["application/json"]}}, "/mediation/requests/{mediation_id}/deny": {"post": {"responses": {"201": {"schema": {"$ref": "#/definitions/MediationDeny"}, "description": null}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/AdminMediationDeny"}}, {"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Deny a stored mediation request", "produces": ["application/json"]}}, "/mediation/requests/{mediation_id}/grant": {"post": {"responses": {"201": {"schema": {"$ref": "#/definitions/MediationGrant"}, "description": null}}, "parameters": [{"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Grant received mediation", "produces": ["application/json"]}}, "/mediation/{mediation_id}/default-mediator": {"put": {"responses": {"201": {"schema": {"$ref": "#/definitions/MediationRecord"}, "description": null}}, "parameters": [{"in": "path", "name": "mediation_id", "required": true, "type": "string", "format": "uuid", "description": "Mediation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["mediation"], "summary": "Set default mediator", "produces": ["application/json"]}}, "/out-of-band/create-invitation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/InvitationRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/InvitationCreateRequest"}}, {"in": "query", "name": "auto_accept", "required": false, "type": "boolean", "description": "Auto-accept connection (defaults to configuration)"}, {"in": "query", "name": "multi_use", "required": false, "type": "boolean", "description": "Create invitation for multiple use (default false)"}], "tags": ["out-of-band"], "summary": "Create a new connection invitation", "produces": ["application/json"]}}, "/out-of-band/receive-invitation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/ConnRecord"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/InvitationReceiveRequest"}}, {"in": "query", "name": "alias", "required": false, "type": "string", "description": "Alias for connection", "example": "Barry"}, {"in": "query", "name": "auto_accept", "required": false, "type": "boolean", "description": "Auto-accept connection (defaults to configuration)"}, {"in": "query", "name": "mediation_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "use_existing_connection", "required": false, "type": "boolean", "description": "Use an existing connection, if possible"}], "tags": ["out-of-band"], "summary": "Receive a new connection invitation", "produces": ["application/json"]}}, "/plugins": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/AdminModules"}, "description": ""}}, "parameters": [], "tags": ["server"], "summary": "Fetch the list of loaded plugins", "produces": ["application/json"]}}, "/present-proof/create-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10PresentationCreateRequestRequest"}}], "tags": ["present-proof"], "summary": "\n    Creates a presentation request not bound to any proposal or existing connection\n    ", "produces": ["application/json"]}}, "/present-proof/records": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchangeList"}, "description": ""}}, "parameters": [{"in": "query", "name": "connection_id", "required": false, "type": "string", "format": "uuid", "description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "role", "required": false, "type": "string", "enum": ["prover", "verifier"], "description": "Role assigned in presentation exchange"}, {"in": "query", "name": "state", "required": false, "type": "string", "enum": ["proposal_sent", "proposal_received", "request_sent", "request_received", "presentation_sent", "presentation_received", "verified", "presentation_acked"], "description": "Presentation exchange state"}, {"in": "query", "name": "thread_id", "required": false, "type": "string", "format": "uuid", "description": "Thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Fetch all present-proof exchange records", "produces": ["application/json"]}}, "/present-proof/records/{pres_ex_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Fetch a single presentation exchange record", "produces": ["application/json"]}, "delete": {"responses": {"200": {"schema": {"$ref": "#/definitions/PresentProofModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Remove an existing presentation exchange record", "produces": ["application/json"]}}, "/present-proof/records/{pres_ex_id}/credentials": {"get": {"responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/IndyCredPrecis"}}, "description": ""}}, "parameters": [{"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "count", "required": false, "type": "string", "pattern": "^[1-9][0-9]*$", "description": "Maximum number to retrieve", "example": "1"}, {"in": "query", "name": "extra_query", "required": false, "type": "string", "pattern": "^{\\s*\".*?\"\\s*:\\s*{.*?}\\s*(,\\s*\".*?\"\\s*:\\s*{.*?}\\s*)*\\s*}$", "description": "(JSON) object mapping referents to extra WQL queries", "example": "{\"0_drink_uuid\": {\"attr::drink::value\": \"martini\"}}"}, {"in": "query", "name": "referent", "required": false, "type": "string", "description": "Proof request referents of interest, comma-separated", "example": "1_name_uuid,2_score_uuid"}, {"in": "query", "name": "start", "required": false, "type": "string", "pattern": "^[0-9]*$", "description": "Start index", "example": "0"}], "tags": ["present-proof"], "summary": "Fetch credentials for a presentation request from wallet", "produces": ["application/json"]}}, "/present-proof/records/{pres_ex_id}/problem-report": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/PresentProofModuleResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10PresentationProblemReportRequest"}}, {"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Send a problem report for presentation exchange", "produces": ["application/json"]}}, "/present-proof/records/{pres_ex_id}/send-presentation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10PresentationRequest"}}, {"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Sends a proof presentation", "produces": ["application/json"]}}, "/present-proof/records/{pres_ex_id}/send-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/AdminAPIMessageTracing"}}, {"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Sends a presentation request in reference to a proposal", "produces": ["application/json"]}}, "/present-proof/records/{pres_ex_id}/verify-presentation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "path", "name": "pres_ex_id", "required": true, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}], "tags": ["present-proof"], "summary": "Verify a received presentation", "produces": ["application/json"]}}, "/present-proof/send-proposal": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10PresentationProposalRequest"}}], "tags": ["present-proof"], "summary": "Sends a presentation proposal", "produces": ["application/json"]}}, "/present-proof/send-request": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/V10PresentationExchange"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/V10PresentationSendRequestRequest"}}], "tags": ["present-proof"], "summary": "Sends a free presentation request not bound to any proposal", "produces": ["application/json"]}}, "/revocation/active-registry/{cred_def_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "cred_def_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"}], "tags": ["revocation"], "summary": "Get current active revocation registry by credential definition id", "produces": ["application/json"]}}, "/revocation/clear-pending-revocations": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/PublishRevocations"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/ClearPendingRevocationsRequest"}}], "tags": ["revocation"], "summary": "Clear pending revocations", "produces": ["application/json"]}}, "/revocation/create-registry": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/RevRegCreateRequest"}}], "tags": ["revocation"], "summary": "Creates a new revocation registry", "produces": ["application/json"]}}, "/revocation/credential-record": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/CredRevRecordResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "cred_ex_id", "required": false, "type": "string", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"}, {"in": "query", "name": "cred_rev_id", "required": false, "type": "string", "pattern": "^[1-9][0-9]*$", "description": "Credential revocation identifier", "example": "12345"}, {"in": "query", "name": "rev_reg_id", "required": false, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Get credential revocation status", "produces": ["application/json"]}}, "/revocation/publish-revocations": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/PublishRevocations"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/PublishRevocations"}}], "tags": ["revocation"], "summary": "Publish pending revocations to ledger", "produces": ["application/json"]}}, "/revocation/registries/created": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegsCreated"}, "description": ""}}, "parameters": [{"in": "query", "name": "cred_def_id", "required": false, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"}, {"in": "query", "name": "state", "required": false, "type": "string", "enum": ["init", "generated", "posted", "active", "full"], "description": "Revocation registry state"}], "tags": ["revocation"], "summary": "Search for matching revocation registries that current agent created", "produces": ["application/json"]}}, "/revocation/registry/{rev_reg_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Get revocation registry by revocation registry id", "produces": ["application/json"]}, "patch": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/RevRegUpdateTailsFileUri"}}, {"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Update revocation registry with new public URI to its tails file", "produces": ["application/json"]}}, "/revocation/registry/{rev_reg_id}/definition": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Send revocation registry definition to ledger", "produces": ["application/json"]}}, "/revocation/registry/{rev_reg_id}/entry": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Send revocation registry entry to ledger", "produces": ["application/json"]}}, "/revocation/registry/{rev_reg_id}/issued": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegIssuedResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Get number of credentials issued against revocation registry", "produces": ["application/json"]}}, "/revocation/registry/{rev_reg_id}/set-state": {"patch": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevRegResult"}, "description": ""}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}, {"in": "query", "name": "state", "required": true, "type": "string", "enum": ["init", "generated", "posted", "active", "full"], "description": "Revocation registry state to set"}], "tags": ["revocation"], "summary": "Set revocation registry state manually", "produces": ["application/json"]}}, "/revocation/registry/{rev_reg_id}/tails-file": {"put": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevocationModuleResponse"}, "description": ""}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Upload local tails file to server", "produces": ["application/json"]}, "get": {"responses": {"200": {"schema": {"type": "string", "format": "binary"}, "description": "tails file"}}, "parameters": [{"in": "path", "name": "rev_reg_id", "required": true, "type": "string", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "description": "Revocation Registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0"}], "tags": ["revocation"], "summary": "Download tails file", "produces": ["application/octet-stream"]}}, "/revocation/revoke": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/RevocationModuleResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/RevokeRequest"}}], "tags": ["revocation"], "summary": "Revoke an issued credential", "produces": ["application/json"]}}, "/schemas": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/SchemaSendResults"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/SchemaSendRequest"}}], "tags": ["schema"], "summary": "Sends a schema to the ledger", "produces": ["application/json"]}}, "/schemas/created": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/SchemasCreatedResults"}, "description": ""}}, "parameters": [{"in": "query", "name": "schema_id", "required": false, "type": "string", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0"}, {"in": "query", "name": "schema_issuer_did", "required": false, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "Schema issuer DID", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "schema_name", "required": false, "type": "string", "description": "Schema name", "example": "membership"}, {"in": "query", "name": "schema_version", "required": false, "type": "string", "pattern": "^[0-9.]+$", "description": "Schema version", "example": "1.0"}], "tags": ["schema"], "summary": "Search for matching schema that agent originated", "produces": ["application/json"]}}, "/schemas/{schema_id}": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/SchemaGetResults"}, "description": ""}}, "parameters": [{"in": "path", "name": "schema_id", "required": true, "type": "string", "pattern": "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0"}], "tags": ["schema"], "summary": "Gets a schema from the ledger", "produces": ["application/json"]}}, "/shutdown": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/AdminShutdown"}, "description": ""}}, "parameters": [], "tags": ["server"], "summary": "Shut down server", "produces": ["application/json"]}}, "/status": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/AdminStatus"}, "description": ""}}, "parameters": [], "tags": ["server"], "summary": "Fetch the server status", "produces": ["application/json"]}}, "/status/live": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/AdminStatusLiveliness"}, "description": ""}}, "parameters": [], "tags": ["server"], "summary": "Liveliness check", "produces": ["application/json"]}}, "/status/ready": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/AdminStatusReadiness"}, "description": ""}}, "parameters": [], "tags": ["server"], "summary": "Readiness check", "produces": ["application/json"]}}, "/status/reset": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/AdminStatus"}, "description": ""}}, "parameters": [], "tags": ["server"], "summary": "Reset statistics", "produces": ["application/json"]}}, "/wallet/did": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/DIDList"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": false, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}, {"in": "query", "name": "posture", "required": false, "type": "string", "enum": ["public", "posted", "wallet_only"], "description": "Whether DID is current public DID, posted to ledger but current public DID, or local to the wallet", "example": "wallet_only"}, {"in": "query", "name": "verkey", "required": false, "type": "string", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "description": "Verification key of interest", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"}], "tags": ["wallet"], "summary": "List wallet DIDs", "produces": ["application/json"]}}, "/wallet/did/create": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/DIDResult"}, "description": ""}}, "parameters": [], "tags": ["wallet"], "summary": "Create a local DID", "produces": ["application/json"]}}, "/wallet/did/local/rotate-keypair": {"patch": {"responses": {"200": {"schema": {"$ref": "#/definitions/WalletModuleResponse"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}], "tags": ["wallet"], "summary": "Rotate keypair for a DID not posted to the ledger", "produces": ["application/json"]}}, "/wallet/did/public": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/DIDResult"}, "description": ""}}, "parameters": [], "tags": ["wallet"], "summary": "Fetch the current public DID", "produces": ["application/json"]}, "post": {"responses": {"200": {"schema": {"$ref": "#/definitions/DIDResult"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}], "tags": ["wallet"], "summary": "Assign the current public DID", "produces": ["application/json"]}}, "/wallet/get-did-endpoint": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/DIDEndpoint"}, "description": ""}}, "parameters": [{"in": "query", "name": "did", "required": true, "type": "string", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv"}], "tags": ["wallet"], "summary": "Query DID endpoint in wallet", "produces": ["application/json"]}}, "/wallet/set-did-endpoint": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/WalletModuleResponse"}, "description": ""}}, "parameters": [{"in": "body", "required": false, "name": "body", "schema": {"$ref": "#/definitions/DIDEndpointWithType"}}], "tags": ["wallet"], "summary": "Update endpoint in wallet and on ledger if posted to it", "produces": ["application/json"]}}}, "info": {"title": "aca-py api", "version": "v0.6.0"}, "swagger": "2.0", "definitions": {"AMLRecord": {"properties": {"aml": {"additionalProperties": {"type": "string"}, "type": "object"}, "amlContext": {"type": "string"}, "version": {"type": "string"}}, "type": "object"}, "ActionMenuModulesResult": {"properties": {}, "type": "object"}, "AdminAPIMessageTracing": {"properties": {"trace": {"description": "Record trace information, based on agent configuration", "type": "boolean"}}, "type": "object"}, "AdminMediationDeny": {"properties": {"mediator_terms": {"description": "List of mediator rules for recipient", "items": {"description": "Indicate terms that the mediator requires the recipient to agree to", "type": "string"}, "type": "array"}, "recipient_terms": {"description": "List of recipient rules for mediation", "items": {"description": "Indicate terms that the recipient requires the mediator to agree to", "type": "string"}, "type": "array"}}, "type": "object"}, "AdminModules": {"properties": {"result": {"description": "List of admin modules", "items": {"description": "admin module", "type": "string"}, "type": "array"}}, "type": "object"}, "AdminShutdown": {"properties": {}, "type": "object"}, "AdminStatus": {"properties": {}, "type": "object"}, "AdminStatusLiveliness": {"properties": {"alive": {"description": "Liveliness status", "example": true, "type": "boolean"}}, "type": "object"}, "AdminStatusReadiness": {"properties": {"ready": {"description": "Readiness status", "example": true, "type": "boolean"}}, "type": "object"}, "AttachDecorator": {"properties": {"@id": {"description": "Attachment identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "byte_count": {"description": "Byte count of data included by reference", "example": 1234, "format": "int32", "type": "integer"}, "data": {"$ref": "#/definitions/AttachDecoratorData"}, "description": {"description": "Human-readable description of content", "example": "view from doorway, facing east, with lights off", "type": "string"}, "filename": {"description": "File name", "example": "IMG1092348.png", "type": "string"}, "lastmod_time": {"description": "Hint regarding last modification datetime, in ISO-8601 format", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "mime-type": {"description": "MIME type", "example": "image/png", "type": "string"}}, "required": ["data"], "type": "object"}, "AttachDecoratorData": {"properties": {"base64": {"description": "Base64-encoded data", "example": "ey4uLn0=", "pattern": "^[a-zA-Z0-9+/]*={0,2}$", "type": "string"}, "json": {"description": "JSON-serialized data", "example": "{\"sample\": \"content\"}", "type": "object"}, "jws": {"allOf": [{"$ref": "#/definitions/AttachDecoratorDataJWS"}], "description": "Detached Java Web Signature"}, "links": {"description": "List of hypertext links to data", "items": {"example": "https://link.to/data", "type": "string"}, "type": "array"}, "sha256": {"description": "SHA256 hash (binhex encoded) of content", "example": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb", "pattern": "^[a-fA-F0-9+/]{64}$", "type": "string"}}, "type": "object"}, "AttachDecoratorData1JWS": {"properties": {"header": {"$ref": "#/definitions/AttachDecoratorDataJWSHeader"}, "protected": {"description": "protected JWS header", "example": "ey4uLn0", "pattern": "^[-_a-zA-Z0-9]*$", "type": "string"}, "signature": {"description": "signature", "example": "ey4uLn0", "pattern": "^[-_a-zA-Z0-9]*$", "type": "string"}}, "required": ["header", "signature"], "type": "object"}, "AttachDecoratorDataJWS": {"properties": {"header": {"$ref": "#/definitions/AttachDecoratorDataJWSHeader"}, "protected": {"description": "protected JWS header", "example": "ey4uLn0", "pattern": "^[-_a-zA-Z0-9]*$", "type": "string"}, "signature": {"description": "signature", "example": "ey4uLn0", "pattern": "^[-_a-zA-Z0-9]*$", "type": "string"}, "signatures": {"description": "List of signatures", "items": {"$ref": "#/definitions/AttachDecoratorData1JWS"}, "type": "array"}}, "type": "object"}, "AttachDecoratorDataJWSHeader": {"properties": {"kid": {"description": "Key identifier, in W3C did:key or DID URL format", "example": "did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4", "pattern": "^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\\?.*)?#.+)$", "type": "string"}}, "required": ["kid"], "type": "object"}, "AttachmentDef": {"properties": {"id": {"description": "Attachment identifier", "example": "attachment-0", "type": "string"}, "type": {"description": "Attachment type", "enum": ["credential-offer", "present-proof"], "example": "present-proof", "type": "string"}}, "type": "object"}, "AttributeMimeTypesResult": {"properties": {}, "type": "object"}, "BasicMessageModuleResponse": {"properties": {}, "type": "object"}, "ClearPendingRevocationsRequest": {"properties": {"purge": {"additionalProperties": {"items": {"description": "Credential revocation identifier", "example": "12345", "pattern": "^[1-9][0-9]*$", "type": "string"}, "type": "array"}, "description": "Credential revocation ids by revocation registry id: omit for all, specify null or empty list for all pending per revocation registry", "type": "object"}}, "type": "object"}, "ConnRecord": {"properties": {"accept": {"description": "Connection acceptance: manual or auto", "enum": ["manual", "auto"], "example": "auto", "type": "string"}, "alias": {"description": "Optional alias to apply to connection for later use", "example": "Bob, providing quotes", "type": "string"}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "error_msg": {"description": "Error message", "example": "No DIDDoc provided; cannot connect to public DID", "type": "string"}, "inbound_connection_id": {"description": "Inbound routing connection id to use", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "invitation_key": {"description": "Public key for connection", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "invitation_mode": {"description": "Invitation mode", "enum": ["once", "multi", "static"], "example": "once", "type": "string"}, "invitation_msg_id": {"description": "ID of out-of-band invitation message", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "my_did": {"description": "Our DID for connection", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "request_id": {"description": "Connection request identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "rfc23_state": {"description": "State per RFC 23", "example": "invitation-sent", "readOnly": true, "type": "string"}, "routing_state": {"description": "Routing state of connection", "enum": ["none", "request", "active", "error"], "example": "active", "type": "string"}, "state": {"description": "Current record state", "example": "active", "type": "string"}, "their_did": {"description": "Their DID for connection", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "their_label": {"description": "Their label for connection", "example": "Bob", "type": "string"}, "their_public_did": {"description": "Other agent's public DID for connection", "example": "2cpBmR3FqGKWi5EyUbpRY8", "type": "string"}, "their_role": {"description": "Their role in the connection protocol", "enum": ["invitee", "requester", "inviter", "responder"], "example": "requester", "type": "string"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "type": "object"}, "ConnectionInvitation": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "did": {"description": "DID for connection invitation", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "imageUrl": {"description": "Optional image URL for connection invitation", "example": "http://192.168.56.101/img/logo.jpg", "format": "url", "type": "string", "x-nullable": true}, "label": {"description": "Optional label for connection", "example": "Bob", "type": "string"}, "recipientKeys": {"description": "List of recipient keys", "items": {"description": "Recipient public key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "routingKeys": {"description": "List of routing keys", "items": {"description": "Routing key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "serviceEndpoint": {"description": "Service endpoint at which to reach this agent", "example": "http://192.168.56.101:8020", "type": "string"}}, "type": "object"}, "ConnectionList": {"properties": {"results": {"description": "List of connection records", "items": {"$ref": "#/definitions/ConnRecord"}, "type": "array"}}, "type": "object"}, "ConnectionMetadata": {"properties": {"results": {"description": "Dictionary of metadata associated with connection.", "type": "object"}}, "type": "object"}, "ConnectionMetadataSetRequest": {"properties": {"metadata": {"description": "Dictionary of metadata to set for connection.", "type": "object"}}, "required": ["metadata"], "type": "object"}, "ConnectionModuleResponse": {"properties": {}, "type": "object"}, "ConnectionStaticRequest": {"properties": {"alias": {"description": "Alias to assign to this connection", "type": "string"}, "my_did": {"description": "Local DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "my_seed": {"description": "Seed to use for the local DID", "type": "string"}, "their_did": {"description": "Remote DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "their_endpoint": {"description": "URL endpoint for other party", "example": "https://myhost:8021", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "type": "string"}, "their_label": {"description": "Other party's label for this connection", "type": "string"}, "their_seed": {"description": "Seed to use for the remote DID", "type": "string"}, "their_verkey": {"description": "Remote verification key", "type": "string"}}, "type": "object"}, "ConnectionStaticResult": {"properties": {"mv_verkey": {"description": "My verification key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "my_did": {"description": "Local DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "my_endpoint": {"description": "My URL endpoint", "example": "https://myhost:8021", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "type": "string"}, "record": {"$ref": "#/definitions/ConnRecord"}, "their_did": {"description": "Remote DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "their_verkey": {"description": "Remote verification key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}}, "required": ["mv_verkey", "my_did", "my_endpoint", "record", "their_did", "their_verkey"], "type": "object"}, "CreateInvitationRequest": {"properties": {"mediation_id": {"description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "type": "string"}, "metadata": {"description": "Optional metadata to attach to the connection created with the invitation", "type": "object"}, "recipient_keys": {"description": "List of recipient keys", "items": {"description": "Recipient public key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "routing_keys": {"description": "List of routing keys", "items": {"description": "Routing key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "service_endpoint": {"description": "Connection endpoint", "example": "http://192.168.56.102:8020", "type": "string"}}, "type": "object"}, "CredAttrSpec": {"properties": {"mime-type": {"description": "MIME type: omit for (null) default", "example": "image/jpeg", "type": "string", "x-nullable": true}, "name": {"description": "Attribute name", "example": "favourite_drink", "type": "string"}, "value": {"description": "Attribute value: base64-encode if MIME type is present", "example": "martini", "type": "string"}}, "required": ["name", "value"], "type": "object"}, "CredBrief": {"properties": {"attrs": {"additionalProperties": {"description": "Attribute value", "type": "string"}, "description": "Attribute names mapped to their raw values", "type": "object"}, "cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "cred_rev_id": {"description": "Credential revocation identifier", "example": "12345", "pattern": "^[1-9][0-9]*$", "type": "string"}, "referent": {"description": "Credential referent", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "rev_reg_id": {"description": "Revocation registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}}, "type": "object"}, "CredBriefList": {"properties": {"results": {"items": {"$ref": "#/definitions/CredBrief"}, "type": "array"}}, "type": "object"}, "CredRevRecordResult": {"properties": {}, "type": "object"}, "CredRevokedResult": {"properties": {"revoked": {"description": "Whether credential is revoked on the ledger", "type": "boolean"}}, "type": "object"}, "CredentialDefinition": {"properties": {"id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "schemaId": {"description": "Schema identifier within credential definition identifier", "example": "20", "type": "string"}, "tag": {"description": "Tag within credential definition identifier", "example": "tag", "type": "string"}, "type": {"default": "CL", "description": "Signature type: CL for Camenisch-Lysyanskaya", "example": "CL"}, "value": {"description": "Credential definition primary and revocation values", "type": "object"}, "ver": {"description": "Node protocol version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}}, "type": "object"}, "CredentialDefinitionGetResults": {"properties": {"credential_definition": {"$ref": "#/definitions/CredentialDefinition"}}, "type": "object"}, "CredentialDefinitionSendRequest": {"properties": {"revocation_registry_size": {"description": "Revocation registry size", "example": 1000, "format": "int32", "maximum": 32768, "minimum": 4, "type": "integer"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "support_revocation": {"description": "Revocation supported flag", "type": "boolean"}, "tag": {"description": "Credential definition identifier tag", "example": "default", "type": "string"}}, "type": "object"}, "CredentialDefinitionSendResults": {"properties": {"credential_definition_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}}, "type": "object"}, "CredentialDefinitionsCreatedResults": {"properties": {"credential_definition_ids": {"items": {"description": "Credential definition identifiers", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "type": "array"}}, "type": "object"}, "CredentialPreview": {"properties": {"@type": {"description": "Message type identifier", "example": "issue-credential/1.0/credential-preview", "type": "string"}, "attributes": {"items": {"$ref": "#/definitions/CredAttrSpec"}, "type": "array"}}, "required": ["attributes"], "type": "object"}, "DID": {"properties": {"did": {"description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "posture": {"description": "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet", "enum": ["public", "posted", "wallet_only"], "example": "wallet_only", "type": "string"}, "verkey": {"description": "Public verification key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}}, "type": "object"}, "DIDEndpoint": {"properties": {"did": {"description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "endpoint": {"description": "Endpoint to set (omit to delete)", "example": "https://myhost:8021", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "type": "string"}}, "required": ["did"], "type": "object"}, "DIDEndpointWithType": {"properties": {"did": {"description": "DID of interest", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "endpoint": {"description": "Endpoint to set (omit to delete)", "example": "https://myhost:8021", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "type": "string"}, "endpoint_type": {"description": "Endpoint type to set (default 'Endpoint'); affects only public or posted DIDs", "enum": ["Endpoint", "Profile", "LinkedDomains"], "example": "Endpoint", "type": "string"}}, "required": ["did"], "type": "object"}, "DIDList": {"properties": {"results": {"description": "DID list", "items": {"$ref": "#/definitions/DID"}, "type": "array"}}, "type": "object"}, "DIDResult": {"properties": {"result": {"$ref": "#/definitions/DID"}}, "type": "object"}, "DIDXRequest": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "did": {"description": "DID of exchange", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "did_doc~attach": {"allOf": [{"$ref": "#/definitions/AttachDecorator"}], "description": "As signed attachment, DID Doc associated with DID"}, "label": {"description": "Label for DID exchange request", "example": "Request to connect with Bob", "type": "string"}}, "required": ["label"], "type": "object"}, "EndpointsResult": {"properties": {"my_endpoint": {"description": "My endpoint", "example": "https://myhost:8021", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "type": "string"}, "their_endpoint": {"description": "Their endpoint", "example": "https://myhost:8021", "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$", "type": "string"}}, "type": "object"}, "HolderModuleResponse": {"properties": {}, "type": "object"}, "IndyCredInfo": {"properties": {"attrs": {"additionalProperties": {"example": "24", "type": "string"}, "description": "Attribute names and value", "type": "object"}, "referent": {"description": "Wallet referent", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}}, "type": "object"}, "IndyCredPrecis": {"properties": {"cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "cred_info": {"allOf": [{"$ref": "#/definitions/IndyCredInfo"}], "description": "Credential info"}, "cred_rev": {"description": "Credential revocation identifier", "example": "12345", "pattern": "^[1-9][0-9]*$", "type": "string"}, "interval": {"allOf": [{"$ref": "#/definitions/IndyProofReqNonRevoked"}], "description": "Non-revocation interval from presentation request"}, "presentation_referents": {"items": {"description": "presentation referent", "example": "1_age_uuid", "type": "string"}, "type": "array"}, "rev_reg_id": {"description": "Revocation registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}}, "type": "object"}, "IndyProofReqAttrSpec": {"properties": {"name": {"description": "Attribute name", "example": "favouriteDrink", "type": "string"}, "names": {"description": "Attribute name group", "items": {"example": "age", "type": "string"}, "type": "array"}, "non_revoked": {"$ref": "#/definitions/IndyProofReqNonRevoked"}, "restrictions": {"description": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name", "items": {"additionalProperties": {"example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "type": "string"}, "type": "object"}, "type": "array"}}, "type": "object"}, "IndyProofReqNonRevoked": {"properties": {"to": {"description": "Timestamp of interest for non-revocation proof", "example": 1618585539, "format": "int32", "maximum": 18446744073709551615, "minimum": 0, "type": "integer"}}, "required": ["to"], "type": "object"}, "IndyProofReqPredSpec": {"properties": {"name": {"description": "Attribute name", "example": "index", "type": "string"}, "non_revoked": {"$ref": "#/definitions/IndyProofReqNonRevoked"}, "p_type": {"description": "Predicate type ('<', '<=', '>=', or '>')", "enum": ["<", "<=", ">=", ">"], "example": ">=", "type": "string"}, "p_value": {"description": "Threshold value", "format": "int32", "type": "integer"}, "restrictions": {"description": "If present, credential must satisfy one of given restrictions", "items": {"$ref": "#/definitions/IndyProofReqPredSpecRestrictions"}, "type": "array"}}, "required": ["name", "p_type", "p_value"], "type": "object"}, "IndyProofReqPredSpecRestrictions": {"properties": {"cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "issuer_did": {"description": "Credential issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "schema_issuer_did": {"description": "Schema issuer (origin) DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_name": {"description": "Schema name", "example": "transcript", "type": "string"}, "schema_version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}}, "type": "object"}, "IndyProofRequest": {"properties": {"name": {"description": "Proof request name", "example": "Proof request", "type": "string"}, "non_revoked": {"$ref": "#/definitions/IndyProofReqNonRevoked"}, "nonce": {"description": "Nonce", "example": "1234567890", "type": "string"}, "requested_attributes": {"additionalProperties": {"$ref": "#/definitions/IndyProofReqAttrSpec"}, "description": "Requested attribute specifications of proof request", "type": "object"}, "requested_predicates": {"additionalProperties": {"$ref": "#/definitions/IndyProofReqPredSpec"}, "description": "Requested predicate specifications of proof request", "type": "object"}, "version": {"description": "Proof request version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}}, "required": ["requested_attributes", "requested_predicates"], "type": "object"}, "IndyRequestedCredsRequestedAttr": {"properties": {"cred_id": {"description": "Wallet credential identifier (typically but not necessarily a UUID)", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "revealed": {"description": "Whether to reveal attribute in proof (default true)", "type": "boolean"}}, "required": ["cred_id"], "type": "object"}, "IndyRequestedCredsRequestedPred": {"properties": {"cred_id": {"description": "Wallet credential identifier (typically but not necessarily a UUID)", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "timestamp": {"description": "Epoch timestamp of interest for non-revocation proof", "example": 1618585539, "format": "int32", "maximum": 18446744073709551615, "minimum": 0, "type": "integer"}}, "required": ["cred_id"], "type": "object"}, "IntroModuleResponse": {"properties": {}, "type": "object"}, "InvitationCreateRequest": {"properties": {"alias": {"description": "Alias for connection", "example": "Barry", "type": "string"}, "attachments": {"description": "Optional invitation attachments", "items": {"$ref": "#/definitions/AttachmentDef"}, "type": "array"}, "handshake_protocols": {"items": {"description": "Handshake protocol to specify in invitation", "example": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0", "type": "string"}, "type": "array"}, "mediation_id": {"description": "Identifier for active mediation record to be used", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "type": "string"}, "metadata": {"description": "Optional metadata to attach to the connection created with the invitation", "type": "object"}, "my_label": {"description": "Label for connection invitation", "example": "Invitation to Barry", "type": "string"}, "use_public_did": {"description": "Whether to use public DID in invitation", "example": false, "type": "boolean"}}, "type": "object"}, "InvitationReceiveRequest": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "handshake_protocols": {"items": {"description": "Handshake protocol", "example": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0", "type": "string"}, "type": "array"}, "label": {"description": "Optional label", "example": "Bob", "type": "string"}, "request~attach": {"description": "Optional request attachment", "items": {"$ref": "#/definitions/AttachDecorator"}, "type": "array"}, "service": {}, "service_blocks": {"items": {"$ref": "#/definitions/Service"}, "type": "array"}, "service_dids": {"items": {"description": "Service DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "type": "array"}}, "type": "object"}, "InvitationRecord": {"properties": {"created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "invi_msg_id": {"description": "Invitation message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "invitation": {"description": "Out of band invitation object", "type": "object"}, "invitation_id": {"description": "Invitation record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "invitation_url": {"description": "Invitation message URL", "example": "https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=", "type": "string"}, "state": {"description": "Out of band message exchange state", "example": "await_response", "type": "string"}, "trace": {"description": "Record trace information, based on agent configuration", "type": "boolean"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "type": "object"}, "InvitationResult": {"properties": {"connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "invitation": {"$ref": "#/definitions/ConnectionInvitation"}, "invitation_url": {"description": "Invitation URL", "example": "http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==", "type": "string"}}, "type": "object"}, "IssueCredentialModuleResponse": {"properties": {}, "type": "object"}, "Keylist": {"properties": {"results": {"description": "List of keylist records", "items": {"$ref": "#/definitions/RouteRecord"}, "type": "array"}}, "type": "object"}, "KeylistQuery": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "filter": {"description": "Query dictionary object", "example": {"filter": {}}, "type": "object"}, "paginate": {"allOf": [{"$ref": "#/definitions/KeylistQueryPaginate"}], "description": "Pagination info"}}, "type": "object"}, "KeylistQueryFilterRequest": {"properties": {"filter": {"description": "Filter for keylist query.", "type": "object"}}, "type": "object"}, "KeylistQueryPaginate": {"properties": {"limit": {"description": "Limit for keylist query", "example": 30, "format": "int32", "type": "integer"}, "offset": {"description": "Offset value for query", "example": 0, "format": "int32", "type": "integer"}}, "type": "object"}, "KeylistUpdate": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "updates": {"description": "List of update rules", "items": {"$ref": "#/definitions/KeylistUpdateRule"}, "type": "array"}}, "type": "object"}, "KeylistUpdateRequest": {"properties": {"updates": {"items": {"$ref": "#/definitions/KeylistUpdateRule"}, "type": "array"}}, "type": "object"}, "KeylistUpdateRule": {"properties": {"action": {"description": "Action for specific key", "enum": ["add", "remove"], "example": "add", "type": "string"}, "recipient_key": {"description": "Key to remove or add", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}}, "required": ["action", "recipient_key"], "type": "object"}, "LedgerModulesResult": {"properties": {}, "type": "object"}, "MediationCreateRequest": {"properties": {"mediator_terms": {"description": "List of mediator rules for recipient", "items": {"description": "Indicate terms that the mediator requires the recipient to agree to", "type": "string"}, "type": "array"}, "recipient_terms": {"description": "List of recipient rules for mediation", "items": {"description": "Indicate terms that the recipient requires the mediator to agree to", "type": "string"}, "type": "array"}}, "type": "object"}, "MediationDeny": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "mediator_terms": {"items": {"description": "Terms for mediator to agree", "type": "string"}, "type": "array"}, "recipient_terms": {"items": {"description": "Terms for recipient to agree", "type": "string"}, "type": "array"}}, "type": "object"}, "MediationGrant": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "endpoint": {"description": "endpoint on which messages destined for the recipient are received.", "example": "http://192.168.56.102:8020/", "type": "string"}, "routing_keys": {"items": {"description": "Keys to use for forward message packaging", "type": "string"}, "type": "array"}}, "type": "object"}, "MediationList": {"properties": {"results": {"description": "List of mediation records", "items": {"$ref": "#/definitions/MediationRecord"}, "type": "array"}}, "type": "object"}, "MediationRecord": {"properties": {"connection_id": {"type": "string"}, "created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "endpoint": {"type": "string"}, "mediation_id": {"type": "string"}, "mediator_terms": {"items": {"type": "string"}, "type": "array"}, "recipient_terms": {"items": {"type": "string"}, "type": "array"}, "role": {"type": "string"}, "routing_keys": {"items": {"example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "state": {"description": "Current record state", "example": "active", "type": "string"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "required": ["connection_id", "role"], "type": "object"}, "MenuForm": {"properties": {"description": {"description": "Additional descriptive text for menu form", "example": "Window preference settings", "type": "string"}, "params": {"description": "List of form parameters", "items": {"$ref": "#/definitions/MenuFormParam"}, "type": "array"}, "submit-label": {"description": "Alternative label for form submit button", "example": "Send", "type": "string"}, "title": {"description": "Menu form title", "example": "Preferences", "type": "string"}}, "type": "object"}, "MenuFormParam": {"properties": {"default": {"description": "Default parameter value", "example": "0", "type": "string"}, "description": {"description": "Additional descriptive text for menu form parameter", "example": "Delay in seconds before starting", "type": "string"}, "name": {"description": "Menu parameter name", "example": "delay", "type": "string"}, "required": {"description": "Whether parameter is required", "example": "False", "type": "boolean"}, "title": {"description": "Menu parameter title", "example": "Delay in seconds", "type": "string"}, "type": {"description": "Menu form parameter input type", "example": "int", "type": "string"}}, "required": ["name", "title"], "type": "object"}, "MenuJson": {"properties": {"description": {"description": "Introductory text for the menu", "example": "User preferences for window settings", "type": "string"}, "errormsg": {"description": "Optional error message to display in menu header", "example": "Error: item not present", "type": "string"}, "options": {"description": "List of menu options", "items": {"$ref": "#/definitions/MenuOption"}, "type": "array"}, "title": {"description": "Menu title", "example": "My Menu", "type": "string"}}, "required": ["options"], "type": "object"}, "MenuOption": {"properties": {"description": {"description": "Additional descriptive text for menu option", "example": "Window display preferences", "type": "string"}, "disabled": {"description": "Whether to show option as disabled", "example": "False", "type": "boolean"}, "form": {"$ref": "#/definitions/MenuForm"}, "name": {"description": "Menu option name (unique identifier)", "example": "window_prefs", "type": "string"}, "title": {"description": "Menu option title", "example": "Window Preferences", "type": "string"}}, "required": ["name", "title"], "type": "object"}, "PerformRequest": {"properties": {"name": {"description": "Menu option name", "example": "Query", "type": "string"}, "params": {"additionalProperties": {"example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "description": "Input parameter values", "type": "object"}}, "type": "object"}, "PingRequest": {"properties": {"comment": {"description": "Comment for the ping message", "type": "string", "x-nullable": true}}, "type": "object"}, "PingRequestResponse": {"properties": {"thread_id": {"description": "Thread ID of the ping message", "type": "string"}}, "type": "object"}, "PresAttrSpec": {"properties": {"cred_def_id": {"example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "mime-type": {"description": "MIME type (default null)", "example": "image/jpeg", "type": "string"}, "name": {"description": "Attribute name", "example": "favourite_drink", "type": "string"}, "referent": {"description": "Credential referent", "example": "0", "type": "string"}, "value": {"description": "Attribute value", "example": "martini", "type": "string"}}, "required": ["name"], "type": "object"}, "PresPredSpec": {"properties": {"cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "name": {"description": "Attribute name", "example": "high_score", "type": "string"}, "predicate": {"description": "Predicate type ('<', '<=', '>=', or '>')", "enum": ["<", "<=", ">=", ">"], "example": ">=", "type": "string"}, "threshold": {"description": "Threshold value", "format": "int32", "type": "integer"}}, "required": ["name", "predicate", "threshold"], "type": "object"}, "PresentProofModuleResponse": {"properties": {}, "type": "object"}, "PresentationPreview": {"properties": {"@type": {"description": "Message type identifier", "example": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview", "type": "string"}, "attributes": {"items": {"$ref": "#/definitions/PresAttrSpec"}, "type": "array"}, "predicates": {"items": {"$ref": "#/definitions/PresPredSpec"}, "type": "array"}}, "required": ["attributes", "predicates"], "type": "object"}, "PublishRevocations": {"properties": {"rrid2crid": {"additionalProperties": {"items": {"description": "Credential revocation identifier", "example": "12345", "pattern": "^[1-9][0-9]*$", "type": "string"}, "type": "array"}, "description": "Credential revocation ids by revocation registry id", "type": "object"}}, "type": "object"}, "QueryResult": {"properties": {"results": {"additionalProperties": {"description": "Protocol descriptor", "type": "object"}, "description": "Query results keyed by protocol", "type": "object"}}, "type": "object"}, "ReceiveInvitationRequest": {"properties": {"@id": {"description": "Message identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "@type": {"description": "Message type", "example": "https://didcomm.org/my-family/1.0/my-message-type", "readOnly": true, "type": "string"}, "did": {"description": "DID for connection invitation", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "imageUrl": {"description": "Optional image URL for connection invitation", "example": "http://192.168.56.101/img/logo.jpg", "format": "url", "type": "string", "x-nullable": true}, "label": {"description": "Optional label for connection", "example": "Bob", "type": "string"}, "recipientKeys": {"description": "List of recipient keys", "items": {"description": "Recipient public key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "routingKeys": {"description": "List of routing keys", "items": {"description": "Routing key", "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$", "type": "string"}, "type": "array"}, "serviceEndpoint": {"description": "Service endpoint at which to reach this agent", "example": "http://192.168.56.101:8020", "type": "string"}}, "type": "object"}, "RevRegCreateRequest": {"properties": {"credential_definition_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "max_cred_num": {"description": "Revocation registry size", "example": 1000, "format": "int32", "maximum": 32768, "minimum": 4, "type": "integer"}}, "type": "object"}, "RevRegIssuedResult": {"properties": {"result": {"description": "Number of credentials issued against revocation registry", "example": 0, "format": "int32", "minimum": 0, "type": "integer"}}, "type": "object"}, "RevRegResult": {"properties": {}, "type": "object"}, "RevRegUpdateTailsFileUri": {"properties": {"tails_public_uri": {"description": "Public URI to the tails file", "example": "http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file", "format": "url", "type": "string"}}, "required": ["tails_public_uri"], "type": "object"}, "RevRegsCreated": {"properties": {"rev_reg_ids": {"items": {"description": "Revocation registry identifiers", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "type": "string"}, "type": "array"}}, "type": "object"}, "RevocationModuleResponse": {"properties": {}, "type": "object"}, "RevokeRequest": {"properties": {"cred_ex_id": {"description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", "type": "string"}, "cred_rev_id": {"description": "Credential revocation identifier", "example": "12345", "pattern": "^[1-9][0-9]*$", "type": "string"}, "publish": {"description": "(True) publish revocation to ledger immediately, or (default, False) mark it pending", "type": "boolean"}, "rev_reg_id": {"description": "Revocation registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "type": "string"}}, "type": "object"}, "RouteRecord": {"properties": {"connection_id": {"type": "string"}, "created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "recipient_key": {"type": "string"}, "record_id": {"type": "string"}, "role": {"type": "string"}, "state": {"description": "Current record state", "example": "active", "type": "string"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "wallet_id": {"type": "string"}}, "required": ["recipient_key"], "type": "object"}, "Schema": {"properties": {"attrNames": {"description": "Schema attribute names", "items": {"description": "Attribute name", "example": "score", "type": "string"}, "type": "array"}, "id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "name": {"description": "Schema name", "example": "schema_name", "type": "string"}, "seqNo": {"description": "Schema sequence number", "example": 10, "format": "int32", "minimum": 1, "type": "integer"}, "ver": {"description": "Node protocol version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}, "version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}}, "type": "object"}, "SchemaGetResults": {"properties": {"schema": {"$ref": "#/definitions/Schema"}}, "type": "object"}, "SchemaSendRequest": {"properties": {"attributes": {"description": "List of schema attributes", "items": {"description": "attribute name", "example": "score", "type": "string"}, "type": "array"}, "schema_name": {"description": "Schema name", "example": "prefs", "type": "string"}, "schema_version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}}, "required": ["attributes", "schema_name", "schema_version"], "type": "object"}, "SchemaSendResults": {"properties": {"schema": {"description": "Schema result", "type": "object"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}}, "required": ["schema", "schema_id"], "type": "object"}, "SchemasCreatedResults": {"properties": {"schema_ids": {"items": {"description": "Schema identifiers", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "type": "array"}}, "type": "object"}, "SendMenu": {"properties": {"menu": {"allOf": [{"$ref": "#/definitions/MenuJson"}], "description": "Menu to send to connection"}}, "required": ["menu"], "type": "object"}, "SendMessage": {"properties": {"content": {"description": "Message content", "example": "Hello", "type": "string"}}, "type": "object"}, "Service": {"properties": {"did": {"description": "Service DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "id": {"description": "Service identifier", "type": "string"}, "recipientKeys": {"description": "List of recipient keys", "items": {"description": "Recipient public key", "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH", "pattern": "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$", "type": "string"}, "type": "array"}, "routingKeys": {"description": "List of routing keys", "items": {"description": "Routing key", "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH", "pattern": "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$", "type": "string"}, "type": "array"}, "serviceEndpoint": {"description": "Service endpoint at which to reach this agent", "example": "http://192.168.56.101:8020", "type": "string"}, "type": {"description": "Service type", "type": "string"}}, "required": ["id", "type"], "type": "object"}, "SignRequest": {"properties": {"doc": {"description": "JSON-LD Doc to sign", "type": "object"}, "verkey": {"description": "verkey to use for signing", "type": "string"}}, "required": ["doc", "verkey"], "type": "object"}, "SignResponse": {"properties": {"signed_doc": {"type": "object"}}, "required": ["signed_doc"], "type": "object"}, "TAAAccept": {"properties": {"mechanism": {"type": "string"}, "text": {"type": "string"}, "version": {"type": "string"}}, "type": "object"}, "TAAAcceptance": {"properties": {"mechanism": {"type": "string"}, "time": {"example": 1618585539, "format": "int32", "maximum": 18446744073709551615, "minimum": 0, "type": "integer"}}, "type": "object"}, "TAAInfo": {"properties": {"aml_record": {"$ref": "#/definitions/AMLRecord"}, "taa_accepted": {"$ref": "#/definitions/TAAAcceptance"}, "taa_record": {"$ref": "#/definitions/TAARecord"}, "taa_required": {"type": "boolean"}}, "type": "object"}, "TAARecord": {"properties": {"digest": {"type": "string"}, "text": {"type": "string"}, "version": {"type": "string"}}, "type": "object"}, "TAAResult": {"properties": {"result": {"$ref": "#/definitions/TAAInfo"}}, "type": "object"}, "V10CredentialCreate": {"properties": {"auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "credential_proposal": {"$ref": "#/definitions/CredentialPreview"}, "issuer_did": {"description": "Credential issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "schema_issuer_did": {"description": "Schema issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_name": {"description": "Schema name", "example": "preferences", "type": "string"}, "schema_version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["credential_proposal"], "type": "object"}, "V10CredentialExchange": {"properties": {"auto_issue": {"description": "Issuer choice to issue to request in this credential exchange", "example": false, "type": "boolean"}, "auto_offer": {"description": "Holder choice to accept offer in this credential exchange", "example": false, "type": "boolean"}, "auto_remove": {"description": "Issuer choice to remove this credential exchange record when complete", "example": false, "type": "boolean"}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "credential": {"description": "Credential as stored", "type": "object"}, "credential_definition_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "credential_exchange_id": {"description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "credential_id": {"description": "Credential identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "credential_offer": {"description": "(Indy) credential offer", "type": "object"}, "credential_offer_dict": {"description": "Serialized credential offer message", "type": "object"}, "credential_proposal_dict": {"description": "Serialized credential proposal message", "type": "object"}, "credential_request": {"description": "(Indy) credential request", "type": "object"}, "credential_request_metadata": {"description": "(Indy) credential request metadata", "type": "object"}, "error_msg": {"description": "Error message", "example": "credential definition identifier is not set in proposal", "type": "string"}, "initiator": {"description": "Issue-credential exchange initiator: self or external", "enum": ["self", "external"], "example": "self", "type": "string"}, "parent_thread_id": {"description": "Parent thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "raw_credential": {"description": "Credential as received, prior to storage in holder wallet", "type": "object"}, "revoc_reg_id": {"description": "Revocation registry identifier", "type": "string"}, "revocation_id": {"description": "Credential identifier within revocation registry", "type": "string"}, "role": {"description": "Issue-credential exchange role: holder or issuer", "enum": ["holder", "issuer"], "example": "issuer", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "state": {"description": "Issue-credential exchange state", "example": "credential_acked", "type": "string"}, "thread_id": {"description": "Thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "trace": {"description": "Record trace information, based on agent configuration", "type": "boolean"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "type": "object"}, "V10CredentialExchangeListResult": {"properties": {"results": {"description": "Aries#0036 v1.0 credential exchange records", "items": {"$ref": "#/definitions/V10CredentialExchange"}, "type": "array"}}, "type": "object"}, "V10CredentialIssueRequest": {"properties": {"comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}}, "type": "object"}, "V10CredentialOfferRequest": {"properties": {"auto_issue": {"description": "Whether to respond automatically to credential requests, creating and issuing requested credentials", "type": "boolean"}, "auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "credential_preview": {"$ref": "#/definitions/CredentialPreview"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "cred_def_id", "credential_preview"], "type": "object"}, "V10CredentialProblemReportRequest": {"properties": {"explain_ltxt": {"type": "string"}}, "required": ["explain_ltxt"], "type": "object"}, "V10CredentialProposalRequestMand": {"properties": {"auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "credential_proposal": {"$ref": "#/definitions/CredentialPreview"}, "issuer_did": {"description": "Credential issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "schema_issuer_did": {"description": "Schema issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_name": {"description": "Schema name", "example": "preferences", "type": "string"}, "schema_version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "credential_proposal"], "type": "object"}, "V10CredentialProposalRequestOpt": {"properties": {"auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "credential_proposal": {"$ref": "#/definitions/CredentialPreview"}, "issuer_did": {"description": "Credential issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "schema_issuer_did": {"description": "Schema issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_name": {"description": "Schema name", "example": "preferences", "type": "string"}, "schema_version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id"], "type": "object"}, "V10CredentialStoreRequest": {"properties": {"credential_id": {"type": "string"}}, "type": "object"}, "V10PresentationCreateRequestRequest": {"properties": {"comment": {"type": "string", "x-nullable": true}, "proof_request": {"$ref": "#/definitions/IndyProofRequest"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["proof_request"], "type": "object"}, "V10PresentationExchange": {"properties": {"auto_present": {"description": "Prover choice to auto-present proof as verifier requests", "example": false, "type": "boolean"}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "error_msg": {"description": "Error message", "example": "Invalid structure", "type": "string"}, "initiator": {"description": "Present-proof exchange initiator: self or external", "enum": ["self", "external"], "example": "self", "type": "string"}, "presentation": {"description": "(Indy) presentation (also known as proof)", "type": "object"}, "presentation_exchange_id": {"description": "Presentation exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "presentation_proposal_dict": {"description": "Serialized presentation proposal message", "type": "object"}, "presentation_request": {"description": "(Indy) presentation request (also known as proof request)", "type": "object"}, "presentation_request_dict": {"description": "Serialized presentation request message", "type": "object"}, "role": {"description": "Present-proof exchange role: prover or verifier", "enum": ["prover", "verifier"], "example": "prover", "type": "string"}, "state": {"description": "Present-proof exchange state", "example": "verified", "type": "string"}, "thread_id": {"description": "Thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "trace": {"description": "Record trace information, based on agent configuration", "type": "boolean"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "verified": {"description": "Whether presentation is verified: true or false", "enum": ["true", "false"], "example": "true", "type": "string"}}, "type": "object"}, "V10PresentationExchangeList": {"properties": {"results": {"description": "Aries RFC 37 v1.0 presentation exchange records", "items": {"$ref": "#/definitions/V10PresentationExchange"}, "type": "array"}}, "type": "object"}, "V10PresentationProblemReportRequest": {"properties": {"explain_ltxt": {"type": "string"}}, "required": ["explain_ltxt"], "type": "object"}, "V10PresentationProposalRequest": {"properties": {"auto_present": {"description": "Whether to respond automatically to presentation requests, building and presenting requested proof", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "presentation_proposal": {"$ref": "#/definitions/PresentationPreview"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "presentation_proposal"], "type": "object"}, "V10PresentationRequest": {"properties": {"requested_attributes": {"additionalProperties": {"$ref": "#/definitions/IndyRequestedCredsRequestedAttr"}, "description": "Nested object mapping proof request attribute referents to requested-attribute specifiers", "type": "object"}, "requested_predicates": {"additionalProperties": {"$ref": "#/definitions/IndyRequestedCredsRequestedPred"}, "description": "Nested object mapping proof request predicate referents to requested-predicate specifiers", "type": "object"}, "self_attested_attributes": {"additionalProperties": {"description": "Self-attested attribute values to use in requested-credentials structure for proof construction", "example": "self_attested_value", "type": "string"}, "description": "Self-attested attributes to build into proof", "type": "object"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["requested_attributes", "requested_predicates", "self_attested_attributes"], "type": "object"}, "V10PresentationSendRequestRequest": {"properties": {"comment": {"type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "proof_request": {"$ref": "#/definitions/IndyProofRequest"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "proof_request"], "type": "object"}, "V20CredAttrSpec": {"properties": {"mime-type": {"description": "MIME type: omit for (null) default", "example": "image/jpeg", "type": "string", "x-nullable": true}, "name": {"description": "Attribute name", "example": "favourite_drink", "type": "string"}, "value": {"description": "Attribute value: base64-encode if MIME type is present", "example": "martini", "type": "string"}}, "required": ["name", "value"], "type": "object"}, "V20CredCreate": {"properties": {"auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "credential_preview": {"$ref": "#/definitions/V20CredPreview"}, "filter": {"allOf": [{"$ref": "#/definitions/V20CredFilter"}], "description": "Credential specification criteria by format"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["credential_preview", "filter"], "type": "object"}, "V20CredExRecord": {"properties": {"auto_issue": {"description": "Issuer choice to issue to request in this credential exchange", "example": false, "type": "boolean"}, "auto_offer": {"description": "Holder choice to accept offer in this credential exchange", "example": false, "type": "boolean"}, "auto_remove": {"description": "Issuer choice to remove this credential exchange record when complete", "example": false, "type": "boolean"}, "conn_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "cred_ex_id": {"description": "Credential exchange identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "cred_id_stored": {"description": "Credential identifier stored in wallet", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "cred_issue": {"description": "Serialized credential issue message", "type": "object"}, "cred_offer": {"description": "Serialized credential offer message", "type": "object"}, "cred_preview": {"description": "Serialized credential preview from credential proposal", "readOnly": true, "type": "object"}, "cred_proposal": {"description": "Serialized credential proposal message", "type": "object"}, "cred_request": {"description": "Serialized credential request message", "type": "object"}, "cred_request_metadata": {"description": "(Indy) credential request metadata", "type": "object"}, "error_msg": {"description": "Error message", "example": "The front fell off", "type": "string"}, "initiator": {"description": "Issue-credential exchange initiator: self or external", "enum": ["self", "external"], "example": "self", "type": "string"}, "parent_thread_id": {"description": "Parent thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "role": {"description": "Issue-credential exchange role: holder or issuer", "enum": ["issuer", "holder"], "example": "issuer", "type": "string"}, "state": {"description": "Issue-credential exchange state", "enum": ["proposal-sent", "proposal-received", "offer-sent", "offer-received", "request-sent", "request-received", "credential-issued", "credential-received", "done"], "example": "done", "type": "string"}, "thread_id": {"description": "Thread identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "trace": {"description": "Record trace information, based on agent configuration", "type": "boolean"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "type": "object"}, "V20CredExRecordDIF": {"properties": {"created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "cred_ex_dif_id": {"description": "Record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "cred_ex_id": {"description": "Corresponding v2.0 credential exchange record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "item": {"description": "DIF item", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "object"}, "state": {"description": "Current record state", "example": "active", "type": "string"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "type": "object"}, "V20CredExRecordDetail": {"properties": {"cred_ex_record": {"allOf": [{"$ref": "#/definitions/V20CredExRecord"}], "description": "Credential exchange record"}, "dif": {"$ref": "#/definitions/V20CredExRecordDIF"}, "indy": {"$ref": "#/definitions/V20CredExRecordIndy"}}, "type": "object"}, "V20CredExRecordIndy": {"properties": {"created_at": {"description": "Time of record creation", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}, "cred_ex_id": {"description": "Corresponding v2.0 credential exchange record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "cred_ex_indy_id": {"description": "Record identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "type": "string"}, "cred_request_metadata": {"description": "Credential request metadata for indy holder", "type": "object"}, "cred_rev_id": {"description": "Credential revocation identifier within revocation registry", "example": "12345", "pattern": "^[1-9][0-9]*$", "type": "string"}, "rev_reg_id": {"description": "Revocation registry identifier", "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)", "type": "string"}, "state": {"description": "Current record state", "example": "active", "type": "string"}, "updated_at": {"description": "Time of last record update", "example": "2021-04-16 15:05:39Z", "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$", "type": "string"}}, "type": "object"}, "V20CredExRecordListResult": {"properties": {"results": {"description": "Credential exchange records and corresponding detail records", "items": {"$ref": "#/definitions/V20CredExRecordDetail"}, "type": "array"}}, "type": "object"}, "V20CredFilter": {"properties": {"dif": {"allOf": [{"$ref": "#/definitions/V20CredFilterDIF"}], "description": "Credential filter for DIF"}, "indy": {"allOf": [{"$ref": "#/definitions/V20CredFilterIndy"}], "description": "Credential filter for indy"}}, "type": "object"}, "V20CredFilterDIF": {"properties": {"some_dif_criterion": {"description": "Placeholder for W3C/DIF/JSON-LD filtration criterion", "type": "string"}}, "type": "object"}, "V20CredFilterIndy": {"properties": {"cred_def_id": {"description": "Credential definition identifier", "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$", "type": "string"}, "issuer_did": {"description": "Credential issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_id": {"description": "Schema identifier", "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$", "type": "string"}, "schema_issuer_did": {"description": "Schema issuer DID", "example": "WgWxqztrNooG92RXvxSTWv", "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$", "type": "string"}, "schema_name": {"description": "Schema name", "example": "preferences", "type": "string"}, "schema_version": {"description": "Schema version", "example": "1.0", "pattern": "^[0-9.]+$", "type": "string"}}, "type": "object"}, "V20CredIssueProblemReportRequest": {"properties": {"explain_ltxt": {"type": "string"}}, "required": ["explain_ltxt"], "type": "object"}, "V20CredIssueRequest": {"properties": {"comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}}, "type": "object"}, "V20CredOfferRequest": {"properties": {"auto_issue": {"description": "Whether to respond automatically to credential requests, creating and issuing requested credentials", "type": "boolean"}, "auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "credential_preview": {"$ref": "#/definitions/V20CredPreview"}, "filter": {"allOf": [{"$ref": "#/definitions/V20CredFilter"}], "description": "Credential specification criteria by format"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "credential_preview", "filter"], "type": "object"}, "V20CredPreview": {"properties": {"@type": {"description": "Message type identifier", "example": "issue-credential/2.0/credential-preview", "type": "string"}, "attributes": {"items": {"$ref": "#/definitions/V20CredAttrSpec"}, "type": "array"}}, "required": ["attributes"], "type": "object"}, "V20CredProposalRequestPreviewMand": {"properties": {"auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "credential_preview": {"$ref": "#/definitions/V20CredPreview"}, "filter": {"allOf": [{"$ref": "#/definitions/V20CredFilter"}], "description": "Credential specification criteria by format"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "credential_preview", "filter"], "type": "object"}, "V20CredProposalRequestPreviewOpt": {"properties": {"auto_remove": {"description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)", "type": "boolean"}, "comment": {"description": "Human-readable comment", "type": "string", "x-nullable": true}, "connection_id": {"description": "Connection identifier", "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "format": "uuid", "type": "string"}, "credential_preview": {"$ref": "#/definitions/V20CredPreview"}, "filter": {"allOf": [{"$ref": "#/definitions/V20CredFilter"}], "description": "Credential specification criteria by format"}, "trace": {"description": "Whether to trace event (default false)", "example": false, "type": "boolean"}}, "required": ["connection_id", "filter"], "type": "object"}, "V20CredStoreRequest": {"properties": {"credential_id": {"type": "string"}}, "type": "object"}, "V20IssueCredentialModuleResponse": {"properties": {}, "type": "object"}, "VerifyRequest": {"properties": {"doc": {"description": "JSON-LD Doc to verify", "type": "object"}, "verkey": {"description": "verkey to use for doc verification", "type": "string"}}, "required": ["doc", "verkey"], "type": "object"}, "VerifyResponse": {"properties": {"valid": {"type": "boolean"}}, "required": ["valid"], "type": "object"}, "WalletModuleResponse": {"properties": {}, "type": "object"}}, "securityDefinitions": {"ApiKeyHeader": {"type": "apiKey", "in": "header", "name": "X-API-KEY"}}, "security": [{"ApiKeyHeader": []}], "tags": [{"name": "action-menu", "description": "Menu interaction over connection"}, {"name": "basicmessage", "description": "Simple messaging", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0095-basic-message"}}, {"name": "connection", "description": "Connection management", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/9b0aaa39df7e8bd434126c4b33c097aae78d65bf/features/0160-connection-protocol"}}, {"name": "credential-definition", "description": "Credential definition operations", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#cred_def"}}, {"name": "credentials", "description": "Holder credential management", "externalDocs": {"description": "Overview", "url": "https://w3c.github.io/vc-data-model/#credentials"}}, {"name": "did-exchange", "description": "Connection management via DID exchange", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/25464a5c8f8a17b14edaa4310393df6094ace7b0/features/0023-did-exchange"}}, {"name": "introduction", "description": "Introduction of known parties"}, {"name": "issue-credential v1.0", "description": "Credential issue v1.0", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/bb42a6c35e0d5543718fb36dd099551ab192f7b0/features/0036-issue-credential"}}, {"name": "issue-credential v2.0", "description": "Credential issue v2.0", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/6509b84abaf5760a8ba1744c8078d513f28456db/features/0453-issue-credential-v2"}}, {"name": "ledger", "description": "Interaction with ledger", "externalDocs": {"description": "Overview", "url": "https://hyperledger-indy.readthedocs.io/projects/plenum/en/latest/storage.html#ledger"}}, {"name": "mediation", "description": "Mediation management", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/fa8dc4ea1e667eb07db8f9ffeaf074a4455697c0/features/0211-route-coordination"}}, {"name": "out-of-band", "description": "Out-of-band connections", "externalDocs": {"description": "Design", "url": "https://github.com/hyperledger/aries-rfcs/tree/2da7fc4ee043effa3a9960150e7ba8c9a4628b68/features/0434-outofband"}}, {"name": "present-proof", "description": "Proof presentation", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/4fae574c03f9f1013db30bf2c0c676b1122f7149/features/0037-present-proof"}}, {"name": "revocation", "description": "Revocation registry management", "externalDocs": {"description": "Overview", "url": "https://github.com/hyperledger/indy-hipe/tree/master/text/0011-cred-revocation"}}, {"name": "schema", "description": "Schema operations", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#schema"}}, {"name": "server", "description": "Feature discovery", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/9b7ab9814f2e7d1108f74aca6f3d2e5d62899473/features/0031-discover-features"}}, {"name": "trustping", "description": "Trust-ping over connection", "externalDocs": {"description": "Specification", "url": "https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0048-trust-ping"}}, {"name": "wallet", "description": "DID and tag policy management", "externalDocs": {"description": "Design", "url": "https://github.com/hyperledger/indy-sdk/tree/master/docs/design/003-wallet-storage"}}]}